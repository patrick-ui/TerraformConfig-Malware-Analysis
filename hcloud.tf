# Set the variable value in *.tfvars file
# or using the -var="hcloud_token=..." CLI option
variable "hcloud_token" {}

# Configure the Hetzner Cloud Provider
provider "hcloud" {
  token = "${var.hcloud_token}"
}

#Create a new SSH key
resource "hcloud_ssh_key" "default" {
  name       = "mykey"
  public_key = file("~/.ssh/id_rsa.pub")
}

#ip malwareserver
resource "hcloud_primary_ip" "primary_ip_Malware" {
name          = "primary_ip_test"
datacenter    = "fsn1-dc14"
type          = "ipv4"
assignee_type = "server"
auto_delete   = true
  labels = {
    "hallo" : "welt"
  }
}

#ip malwareserver
resource "hcloud_primary_ip" "primary_ip_iNetSim" {
name          = "primary_ip_test"
datacenter    = "fsn1-dc14"
type          = "ipv4"
assignee_type = "server"
auto_delete   = true
  labels = {
    "hallo" : "welt"
  }
}

#Create a firwall
resource "hcloud_firewall" "saferfw" {
  name = "saferfw"
  rule {
    direction = "in"
    protocol  = "tcp"
    port      = "22"
    source_ips = [
      "0.0.0.0/0",
      "::/0"
    ]
  }

  rule {
    direction = "out"
    protocol  = "udp"
    port = "53"
    source_ips = [
      hcloud_primaryip.primary_ip_iNetSim.id
    ]
  }

}

# Create a server
resource "hcloud_server" "malware" {
  name        = "malware"
  image       = "ubuntu-22.04"
  server_type = "cx11"
  firewall_ids = [hcloud_firewall.saferfw.id]
  ssh_keys = [hcloud_ssh_key.default.id]
  user_data = file("user_data.yml")

public_net {
    ipv4_enabled = true
    ipv4 = hcloud_primary_ip.primary_ip_Malware.id
    ipv6_enabled = false
  }
}

#Create second Server
resource "hcloud_server" "iNetSim" {
  name        = "iNetSim"
  image       = "ubuntu-22.04"
  server_type = "cx11"
  firewall_ids = [hcloud_firewall.saferfw.id]
  ssh_keys = [hcloud_ssh_key.default.id]
  
  public_net {
    ipv4_enabled = true
    ipv4 = hcloud_primary_ip.primary_ip_iNetSim.id
    ipv6_enabled = false
  }
}
